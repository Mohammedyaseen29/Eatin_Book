// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant{
  id          Int     @id @default(autoincrement())
  name        String
  main_images String
  images      String[]
  description String
  open_time   String
  close_time  String
  slug        String  @unique
  items       Item[]
  price       Price
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt 
  location_id  Int
  location    Location @relation(fields: [location_id],references: [id])
  Cuisine_id  Int
  cuisine    Cuisine @relation(fields: [Cuisine_id],references: [id])
  reviews     Review[]
  booking     Booking[]
  tables      Tables[]
}

model Item{
  id          Int       @id @default(autoincrement())
  name        String
  price       String
  description String
  restaurant_id Int
  restaurant Restaurant @relation(fields: [restaurant_id],references: [id])

}
model Location{
  id          Int           @id @default(autoincrement())
  name        String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  restaurants Restaurant[]

}

model Cuisine{
  id          Int           @id @default(autoincrement())
  name        String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  restaurants Restaurant[]

}
model User{
  id          Int       @id @default(autoincrement())
  first_name  String
  last_name   String
  city        String
  password    String
  email       String    @unique
  phone       String
  reviews     Review[]
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}
model Review{
  id          Int       @id @default(autoincrement())
  first_name  String
  last_name   String
  text        String
  rating 	    Float
  restaurant_id Int
  restaurant Restaurant @relation(fields: [restaurant_id],references: [id])
  user_id     Int
  user        User @relation(fields: [user_id],references: [id]) 
    
}
model Booking{
  id                    Int         @id @default(autoincrement())
  no_of_people          Int
  booking_time          DateTime
  booker_email          String
  booker_phone          String
  booker_first_name     String
  booker_last_name      String
  booker_occasion       String
  booker_request        String
  restaurant_id         Int
  restaurant            Restaurant @relation(fields: [restaurant_id],references: [id])
  tables               BookingOnTable[]
  created_at            DateTime    @default(now())
  updated_at            DateTime    @updatedAt
  

}
model Tables{
  id              Int           @id @default(autoincrement()) 
  seats           Int
  restaurant_id   Int
  restaurant      Restaurant    @relation(fields: [restaurant_id],references: [id])
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  bookings          BookingOnTable[]

}
model BookingOnTable{
  booking_id      Int
  booking         Booking     @relation(fields: [booking_id],references: [id])
  tables_id       Int
  tables          Tables        @relation(fields: [tables_id],references: [id])
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  @@id([booking_id,tables_id])
}

enum Price{
  CHEAP
  REGULAR
  EXPENSIVE
}
